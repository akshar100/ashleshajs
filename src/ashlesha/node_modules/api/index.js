var YUI = require('yui'), email = require('nodemailer'), Y, api={}, crypto = require('crypto'), cradle = require("cradle");

var c = new(cradle.Connection)("http://@COUCHHOST@",5984,{
			cache:true,
			raw:false
		});
var db = c.database('@COUCHDB_NAME@');

exports.setYInstance=function(c){
	Y = c;
};

var hash = function (pwd, salt){
  var shasum = crypto.createHash('sha1');
  shasum.update(pwd+salt);
  return shasum.digest('hex');
};
function login(config,callback){
	var username = config.username, password = config.password,user;
	db.view('user/byEmail', { key: username }, function (err, docs) {
      if(docs && docs.length>0){
      	user = docs.pop();
      	
      	if(user.value.password===api.user.hash_password({val:password})){
      		if(Y.Lang.isFunction(callback)){ 
      			callback(null,{
	      			success:true,
	      			user:user.value
      			});
      			Y.fire("UpdateUser",{user:user.value,success:true});
      		}
      	}
      	else
      	{
      		if(Y.Lang.isFunction(callback)){ callback(null,{
      			success:false
      		});}
      		Y.fire("UpdateUser",{success:false,user:null});
      	
      }
     }
     else
     {
     	if(Y.Lang.isFunction(callback)){ callback(null,{
      			success:false
      		});}
      	Y.fire("UpdateUser",{success:false,user:null});
     }
  	});
	
}
api.user ={
	is_taken:function(config){
		return {
			taken:false
		};
	},
	hash_password:function(config){
		var salt = "@PASSWORD_SALT@";
		return hash(config.val,salt);
	}
};

api.list = {
	timeline:function(config,callback){
		
		callback(null,{
			"id":"someide3",
			"author_name":"Akshar",
			"created_at":Date.now(),
			"posttext":"Hello wOrRLd",
			"comment_count":10
		});
	}
};

api.db = {
	update:function(config,callback){
		var db,c;
		try{
		
		c = new(cradle.Connection)("http://@COUCHHOST@",5984,{
			cache:true,
			raw:false
		});
		db = c.database('@COUCHDB_NAME@');
		
		
		db.save('_design/user', {
		    views: {
		      byEmail: {
		        map: 'function(doc){ if(doc.email){ emit(doc.email,doc); }}'
		      }
		    }
		 },function(err,data){
		 	
		 	
		 });
		}catch(ex){
			Y.log("Exception in DB update"+ex);
		}
		
	}	
};

exports.api = function(path,config,callback){
		var out;
		switch(path){
			
			case "/login":
				out = login(config,callback);
				return out;
			case "/user/is_taken":
				return api.user.is_taken(config,callback);
			case "/list/timeline":
				return api.list.timeline(config,callback);
			case "/user/hash_password":
				return api.user.hash_password(config);
			case "/user/send_welcome_mail":
				return api.user.send_welcome_mail(config);
			case "/db/update":
				return api.db.update.apply(this,[config,callback]);
		}
	
}








var smtpTransport = email.createTransport("SMTP",{
    service: "Gmail",
    auth: {
        user: "akshar@akshar.co.in",
        pass: "inbullsx10.1"
    }
});

var mailOptions = {
    from: "Akshar Prabhu Desai <akshar@e-yantra.org>", // sender address
    to: "akshar@akskah.co.in", // list of receivers
    subject: "Hello ", // Subject line
    text: "Hello world ", // plaintext body
    html: "<b>Hello world </b>" // html body
}

function send_email(){
	smtpTransport.sendMail(mailOptions, function(error, response){
	    if(error){
	        console.log(error);
	    }else{
	        console.log("Message sent: " + response.message);
	    }
	
	    // if you don't want to use this transport object anymore, uncomment following line
	    smtpTransport.close(); // shut down the connection pool, no more messages
	});
}

